{"ast":null,"code":"var _jsxFileName = \"/home/CR2506/Downloads/invoice-app/client/src/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleRegister = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:4000/register', {\n        username,\n        password\n      });\n      setSuccess('Registration successful! You can now log in.');\n      setUsername('');\n      setPassword('');\n      setConfirmPassword('');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Registration failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: handleRegister,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'green'\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"Gy6l0GynD5+765h5WDxK70T+7mI=\");\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Register","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","handleRegister","e","preventDefault","post","err","_err$response","_err$response$data","response","data","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","placeholder","value","onChange","target","required","type","_c","$RefreshReg$"],"sources":["/home/CR2506/Downloads/invoice-app/client/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function Register() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:4000/register', { username, password });\n      setSuccess('Registration successful! You can now log in.');\n      setUsername('');\n      setPassword('');\n      setConfirmPassword('');\n    } catch (err) {\n      setError(err.response?.data?.error || 'Registration failed');\n    }\n  };\n\n  return (\n    <form className=\"form\" onSubmit={handleRegister}>\n      <h2>Register</h2>\n      {error && <div style={{ color: 'red' }}>{error}</div>}\n      {success && <div style={{ color: 'green' }}>{success}</div>}\n      <input placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)} required />\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} required />\n      <input type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={e => setConfirmPassword(e.target.value)} required />\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}